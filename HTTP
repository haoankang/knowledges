1.  OSI七层协议，包括：应用层、（表示层、会话层）、传输层、网络层、数据链路层、物理层；
    应用层 文件传输，电子邮件，文件服务，虚拟终端 TFTP，HTTP，SNMP，FTP，SMTP，DNS，Telnet 
    表示层 数据格式化，代码转换，数据加密 没有协议 
    会话层 解除或建立与别的接点的联系 没有协议 
    传输层 提供端对端的接口 TCP，UDP 
    网络层 为数据包选择路由 IP，ICMP，RIP，OSPF，BGP，IGMP 
    数据链路层 传输有地址的帧以及错误检测功能 SLIP，CSLIP，PPP，ARP，RARP，MTU 
    物理层 以二进制数据形式在物理媒体上传输数据 ISO2110，IEEE802，IEEE802.2

2. http请求由四部分组成：请求首行、消息报头（请求头）、空行、请求正文；
    请求首行：请求方法 URL HTTP版本；响应首行：HTTP版本 状态码 状态码的原因短语；
    HTTP(超文本传输协议)是一种基于请求和响应模式的、无状态的、应用层的协议；基于TCP/IP的连接方式，HTTP/1.1版本中给出一种持续连接的机制；
    
3. 常见的HTTP方法：
    GET: 获取资源；用于请求访问已被URI识别的资源，可通过URL传参给服务器；
    POST: 传输实体；用于传输信息给服务器；
    PUT:传输文件，报文主体中包含文件内容，保存到对应URI位置；
    HEAD:获取报文首部，和GET类似，只是不返回报文主体，一般用于验证URI是否有效；
    DELETE:删除对应URI位置的文件；
    OPTIONS:查询相应URI支持的HTTP方法；
    TRACE: 追踪路径；容易引发XST跨站追踪攻击，一般不用；
    
4. GET和POST的区别：
    1. GET主要是获取数据；POST主要是发送数据；
    2. GET传输通过URL请求，过程用户可见；POST传输数据通过HTTP的post机制，将字段与对应值封存再请求实体中发送，过程对用户不可见；post较get安全；
    3. GET传输数据量小，受URL长度限制，效率较高；POST可用传输大量数据；
    4. GET只支持ASCII字符，传输中文需要转码；post支持标准字符集，可传递中文字符；
    
5. 常见的HTTP状态码：
    1xx：指示信息--表示请求已接收，继续处理；
    2xx：成功--表示请求已被成功接收、理解、接受
    3xx：重定向--要完成请求必须进行更进一步的操作
    4xx：客户端错误--请求有语法错误或请求无法实现
    5xx：服务器端错误--服务器未能实现合法的请求
    
    200：请求被正确处理
    204：请求被受理，但无资源返回
    206：客户端只是请求资源的一部分，服务器只对请求的部分资源执行GET方法，响应报文中通过Content-Range指定范围的资源
    301：永久性重定向
    302：临时性重定向
    303：与302相似，希望客户端在请求一个URI的时候，能通过GET重定向到另一个URI上；实际使用中301、302、303没区别
    304：发送附带条件的请求时，条件不满足返回，与重定向无关
    307：临时重定向，与302类似，强制要求使用POST方法
    400：请求报文语法有误，服务器无法识别
    401：请求需要认证
    403：请求的资源禁止被访问
    404：服务器找不到对应资源
    500：服务器内部错误
    503：服务器繁忙
 
6. HTTP/1.1新特性
    a. 默认持久连接节省通信量，只要任意一端没明确提出断开连接，就一直保持连接，可发送多次HTTP请求
    b. 管线化，客户端可同时发送多个HTTP请求，而不用一个个等待响应
    c. 断点续传原理
    
7. 常见的HTTP首部字段
    a. 通用首部字段
        Date：创建报文时间
        Connection：连接的管理
        Cache-Control：缓存的控制
        Transfer-Encoding：报文主体的传输编码方式
    b、请求首部字段（请求报文会使用的首部字段）
        Host：请求资源所在服务器
        Accept：可处理的媒体类型
        Accept-Charset：可接收的字符集
        Accept-Encoding：可接受的内容编码
        Accept-Language：可接受的自然语言
    c、响应首部字段（响应报文会使用的首部字段）
        Accept-Ranges：可接受的字节范围
        Location：令客户端重新定向到的URI
        Server：HTTP服务器的安装信息
    d、实体首部字段（请求报文与响应报文的的实体部分使用的首部字段）
        Allow：资源可支持的HTTP方法
        Content-Type：实体主类的类型
        Content-Encoding：实体主体适用的编码方式
        Content-Language：实体主体的自然语言
        Content-Length：实体主体的的字节数
        Content-Range：实体主体的位置范围，一般用于发出部分请求时使用
        
  8、HTTP的缺点与HTTPS
    a、通信使用明文不加密，内容可能被窃听
    b、不验证通信方身份，可能遭到伪装
    c、无法验证报文完整性，可能被篡改

    HTTPS就是HTTP加上SSL加密处理（一般是SSL安全通信线路）+认证+完整性保护

     https的SSL过程
    客户端浏览器在使用HTTPS方式与Web服务器通信时有以下几个步骤，如图所示。


    （1）客户使用https的URL访问Web服务器，要求与Web服务器建立SSL连接。
    （2）Web服务器收到客户端请求后，会生成一对公钥和私钥，并把公钥放在证书中发给客户端浏览器。
    （3）客户端浏览器根据双方同意的SSL连接的安全等级，建立会话密钥，然后用公钥将会话密钥加密，并传送给服务器。
    （4）Web服务器用自己的私钥解密出会话密钥。
    （5）Web服务器利用会话密钥加密与客户端之间的通信。
